Essential Task list
    Weight min value of 1
    use try on get_object
    update references to Area to Event Area
    update user timelines to your timelines
    Event area position default of 1?
    layout of sign-up page
        account form should be using bootstrap etc
    remove pageination from age timeline detail view until implemented
    check usage of setUpTestData(cls): in tests should I create, delete or update twice?
    requirements for different situations (dev, testing, deployment, running)
    only create reports on fail

    ALLOWED_HOSTS = ['*'] improve
    retain data from database if env is terminated, restore if created again
    pass a flag to workflow to create
    how to check if job failed and create env#

    remove unused env vars from main.yaml
    add settings for eb application, environment and region

    workflow to setup elastic beanstalk environment
        create environment using eb cli
        get details needed for terraform
        use terraform to setup https & route53

        create / terminate options
        password protect

Optional Task List
    update all tests to use
    versioning
    update python
    add created and edited date and times to timeline
    add credit field to timeline
    validate titles and names with regex
    add hints and titles to models
    update view object names
    event table
        order
        filter
    event pagination
    add default Field
        created when we create new timeline
        can only be one
        cannot be deleted
        implementation1
            new events are added to this by default
            when area is deleted add events with no area to this event
        implementation2
            use this area when rendering if event had no area
    user profile
        first name
        second name
        account details
        reset password
        subscription
    Consistency
        area or event area
        Create Read Update & Delete OR Add Detail Edit & Delete
    DRY
        look for ways to not to repeat similar views and forms across timeline types
Plan
    Testing
        models
        views
        forms
        coverage
    Check list
        naming look for c&p typos
        remove magic numbers & values where possible
        try to test one thing per method
    Code quality tools


    documentation
    CI
    CD
    info app
    display timeline on canvas
    display timeline on pdf

    other timelines

Feature Ideas
    sharing and collaboration
https://coverage.readthedocs.io/en/6.4/index.html
https://stackoverflow.com/questions/72363700/creating-tests-to-maintain-minimum-coverage


elastic beanstalk

run init without interaction
https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/eb3-cmd-commands.html
https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create-deploy-python-django.html
https://testdriven.io/blog/django-elastic-beanstalk/
eb init ${EB_APPLICATION} -- region ${AWS_REGION} -- platform ${EB_PLATFORM}
eb deploy --verbose -l


install ebci into venv
https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/eb-cli3-install-virtualenv.html
pip install awsebcli --upgrade

en init
https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/eb3-init.html
https://docs.aws.amazon.com/elasticbeanstalk/latest/platforms/platforms-supported.html#platforms-supported.python
eb init tplot --region "eu-west-2" --platform "64bit Amazon Linux 2023 v4.0.3 running Python 3.11"

eb create tplot-dev \
--database.engine "postgres" \
--database.instance "db.t4g.micro" \
--database.username "DRSUser" \
--database.password "RD5_Acc355_01#" \
--database.size 5 \
--elb-type "application" \
--instance_type "t2.micro" \
--min-instances 1 \
--max-instances 2

eb setenv DJANGO_SECRET_KEY='oq_mg-4)1bp3kw2ex1!xieaysgxi-8ddb!to5!c7n!)b$no*n3' \
DJANGO_DEBUG='1'

# get version number from pypproject.toml
# assumes there is only one match
grep -o '[0-9]*\.[0-9]*\.[0-9]*' pyproject.toml

# replace fullstops with underscores
grep -o '[0-9]*\.[0-9]*\.[0-9]*' pyproject.toml | tr . _
