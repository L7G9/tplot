name: Elastic Beanstalk environment

on:
  workflow_dispatch:
    inputs:
      workflow_action:
        type: choice
        description: Create or terminate Elastic Beanstalk Evironment
        required: true
        options:
        - create
        - terminate
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  EB_ENV_NAME: tplot-dev

jobs:
  check_environment:
    steps:
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.9

    - name: Install AWS Elastic Beanstalk CLI
      run: |
        python --version
        pip --version
        pip install awsebcli --upgrade --user

    - name: Check for existing environment
      id: env_status
      run: |
        eb status $EB_ENV_NAME
      continue-on-error: true
    outputs:
      exists: ${{ steps.env_status.outcome == 'success' }}

  create_eb_environment:
    runs-on: ubuntu-latest
    needs: [check_environment]
    if: ${{ github.event.inputs.workflow_action == 'create' && needs.check_environment.outputs.exists == 'false'}}
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.9

    - name: Install AWS Elastic Beanstalk CLI
      run: |
        python --version
        pip --version
        pip install awsebcli --upgrade --user

    - name: Check for existing environment
      id: env_check
      run: |
        eb status tplot-dev
      continue-on-error: true

    - name: Create environment
      if: steps.env_check.outcome == 'failure'
      run: |
        echo creating tplot-dev environment

  terminate_eb_environment:
    runs-on: ubuntu-latest
    needs: [check_environment]
    if: ${{ github.event.inputs.workflow_action == 'terminate' && needs.check_environment.outputs.exists == 'true'}}
    steps:
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.9

    - name: Install AWS Elastic Beanstalk CLI
      run: |
        python --version
        pip --version
        pip install awsebcli --upgrade --user

    - name: Terminate environment
      run: eb terminate $EB_ENV_NAME
